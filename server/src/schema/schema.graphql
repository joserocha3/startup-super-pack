# This file contains the application server schema. Here we only
# expose fields we want accessible from the client.

directive @isAuthenticated(checkIfEmailIsVerified: Boolean = false) on FIELD | FIELD_DEFINITION
directive @hasRole(roles: [String]) on FIELD | FIELD_DEFINITION
directive @date(format: String) on FIELD_DEFINITION

scalar Date

"""
This value controls user authorization to execute specific actions.
"""
enum Role {
  ADMIN
  CLIENT
}

"""
A user of this software. This user can login under an assigned role.
"""
type User {
  id: ID!
  email: String!
  firstName: String!
  lastName: String!
  role: Role!
  equipment: [Equipment!]
}

"""
Types of equipment used for filtering and other classification reasons.
"""
type EquipmentType {
  id: ID!
  description: String!
}

"""
Equipment belonging to a specific user.
"""
type Equipment {
  id: ID!
  description: String!
  type: EquipmentType!
  owner: User!
}

"""
Time and dates certain equipment is available.
"""
type Availability {
  id: ID!
  equipment: Equipment!
  start: Date!
  end: Date!
  booked: Boolean
}

type Query {
  """
  Returns a single user's information.
  """
  me: User @isAuthenticated
  """
  Returns a list of all users.
  """
  users: [User!]! @hasRole(roles:["test"])
  """
  Returns a list of availabilities.
  """
  availabilities: [Availability!]!
  """
  Returns a list of equipments.
  """
  equipments: [Equipment!]!
  """
  Returns a list of equipment types.
  """
  equipmentTypes: [EquipmentType!]!
}

input createUserInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  role: Role!
}

input signUpInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
}

input createEquipmentTypeInput {
  description: String!
}

input createEquipmentInput {
  description: String!
  type: ID!
  owner: ID
}

input createAvailabilityInput {
  equipment: ID!
  start: Date!
  end: Date!
  booked: Boolean
  owner: ID
}

type Mutation {
  """
  Create a single user. Can assign any role.
  """
  createUser(data: createUserInput!): User @hasRole(roles:["ADMIN"])
  """
  User creates their own record. This is public, so CLIENT role is applied.
  """
  signUp(data: signUpInput!): User
  """
  Create an equipment type. Only ADMIN users can do this.
  """
  createEquipmentType(data: createEquipmentTypeInput!): EquipmentType @hasRole(roles:["ADMIN"])
  """
  Create an equimpent record for a specified user, else for the signed in user.
  """
  createEquipment(data: createEquipmentInput!): Equipment @isAuthenticated
  """
  Specify a time and date range that represents when a piece of equipment is available.
  """
  createAvailability(data: createAvailabilityInput!): Availability @isAuthenticated
}
